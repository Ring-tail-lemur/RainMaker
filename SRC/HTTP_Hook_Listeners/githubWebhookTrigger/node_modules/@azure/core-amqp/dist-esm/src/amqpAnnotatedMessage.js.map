{"version":3,"file":"amqpAnnotatedMessage.js","sourceRoot":"","sources":["../../src/amqpAnnotatedMessage.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAClC,2BAA2B;AAC3B,OAAO,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AACpD,OAAO,EAAE,qBAAqB,EAAE,MAAM,qBAAqB,CAAC;AA0C5D;;GAEG;AACH,4GAA4G;AAC5G,MAAM,CAAC,MAAM,oBAAoB,GAAG;IAClC;;OAEG;IACH,eAAe,CAAC,GAAgB;QAC9B,OAAO;YACL,MAAM,EAAE,iBAAiB,CAAC,qBAAqB,CAAC,GAAG,CAAC;YACpD,MAAM,EAAG,GAAW,CAAC,MAAM;YAC3B,kBAAkB,EAAE,GAAG,CAAC,mBAAmB;YAC3C,mBAAmB,EAAE,GAAG,CAAC,oBAAoB;YAC7C,qBAAqB,EAAE,GAAG,CAAC,sBAAsB;YACjD,UAAU,EAAE,qBAAqB,CAAC,yBAAyB,CAAC,GAAG,CAAC;YAChE,IAAI,EAAE,GAAG,CAAC,IAAI;SACf,CAAC;IACJ,CAAC;IACD;;OAEG;IACH,aAAa,CAAC,GAAyB;QACrC,MAAM,OAAO,iDACR,qBAAqB,CAAC,uBAAuB,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,CAAC,GACnE,iBAAiB,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,IAAI,EAAE,CAAC,KAC1D,IAAI,EAAE,GAAG,CAAC,IAAI,EACd,mBAAmB,EAAE,GAAG,CAAC,kBAAkB,EAC3C,oBAAoB,EAAE,GAAG,CAAC,mBAAmB,EAC7C,sBAAsB,EAAE,GAAG,CAAC,qBAAqB,EACjD,MAAM,EAAE,GAAG,CAAC,MAAM,GACnB,CAAC;QACF,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable eqeqeq */\nimport { AmqpMessageHeader } from \"./messageHeader\";\nimport { AmqpMessageProperties } from \"./messageProperties\";\nimport { Message as RheaMessage } from \"rhea-promise\";\n\n/**\n * Describes the AmqpAnnotatedMessage, part of the ServiceBusReceivedMessage(as `amqpAnnotatedMessage` property).\n */\nexport interface AmqpAnnotatedMessage {\n  /**\n   * Describes the defined set of standard header properties of the message.\n   */\n  header?: AmqpMessageHeader;\n  /**\n   * Describes set of footer properties of the message.\n   */\n  footer?: { [key: string]: any };\n  /**\n   * A dictionary containing message attributes that will be held in the message header\n   */\n  messageAnnotations?: { [key: string]: any };\n  /**\n   * A dictionary used for delivery-specific\n   * non-standard properties at the head of the message.\n   */\n  deliveryAnnotations?: { [key: string]: any };\n  /**\n   * A dictionary containing application specific message properties.\n   */\n  applicationProperties?: { [key: string]: any };\n  /**\n   *  Describes the defined set of standard properties of the message.\n   */\n  properties?: AmqpMessageProperties;\n  /**\n   * The message body.\n   */\n  body: any;\n  /**\n   * The AMQP section where the data was decoded from.\n   */\n  bodyType?: \"data\" | \"sequence\" | \"value\";\n}\n\n/**\n * Describes the operations that can be performed on(or to get) the AmqpAnnotatedMessage.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- renaming constant would be a breaking change.\nexport const AmqpAnnotatedMessage = {\n  /**\n   * Takes RheaMessage(`Message` type from \"rhea\") and returns it in the AmqpAnnotatedMessage format.\n   */\n  fromRheaMessage(msg: RheaMessage): AmqpAnnotatedMessage {\n    return {\n      header: AmqpMessageHeader.fromRheaMessageHeader(msg),\n      footer: (msg as any).footer,\n      messageAnnotations: msg.message_annotations,\n      deliveryAnnotations: msg.delivery_annotations,\n      applicationProperties: msg.application_properties,\n      properties: AmqpMessageProperties.fromRheaMessageProperties(msg),\n      body: msg.body,\n    };\n  },\n  /**\n   * Takes AmqpAnnotatedMessage and returns it in the RheaMessage(`Message` type from \"rhea\") format.\n   */\n  toRheaMessage(msg: AmqpAnnotatedMessage): RheaMessage {\n    const message = {\n      ...AmqpMessageProperties.toRheaMessageProperties(msg.properties || {}),\n      ...AmqpMessageHeader.toRheaMessageHeader(msg.header || {}),\n      body: msg.body,\n      message_annotations: msg.messageAnnotations,\n      delivery_annotations: msg.deliveryAnnotations,\n      application_properties: msg.applicationProperties,\n      footer: msg.footer,\n    };\n    return message;\n  },\n};\n"]}