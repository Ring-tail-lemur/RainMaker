// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
/* eslint-disable eqeqeq */
import { AmqpMessageHeader } from "./messageHeader";
import { AmqpMessageProperties } from "./messageProperties";
/**
 * Describes the operations that can be performed on(or to get) the AmqpAnnotatedMessage.
 */
// eslint-disable-next-line @typescript-eslint/no-redeclare -- renaming constant would be a breaking change.
export const AmqpAnnotatedMessage = {
    /**
     * Takes RheaMessage(`Message` type from "rhea") and returns it in the AmqpAnnotatedMessage format.
     */
    fromRheaMessage(msg) {
        return {
            header: AmqpMessageHeader.fromRheaMessageHeader(msg),
            footer: msg.footer,
            messageAnnotations: msg.message_annotations,
            deliveryAnnotations: msg.delivery_annotations,
            applicationProperties: msg.application_properties,
            properties: AmqpMessageProperties.fromRheaMessageProperties(msg),
            body: msg.body,
        };
    },
    /**
     * Takes AmqpAnnotatedMessage and returns it in the RheaMessage(`Message` type from "rhea") format.
     */
    toRheaMessage(msg) {
        const message = Object.assign(Object.assign(Object.assign({}, AmqpMessageProperties.toRheaMessageProperties(msg.properties || {})), AmqpMessageHeader.toRheaMessageHeader(msg.header || {})), { body: msg.body, message_annotations: msg.messageAnnotations, delivery_annotations: msg.deliveryAnnotations, application_properties: msg.applicationProperties, footer: msg.footer });
        return message;
    },
};
//# sourceMappingURL=amqpAnnotatedMessage.js.map