{"remainingRequest":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/src/components/UIComponents/Modal.vue?vue&type=style&index=0&id=5aae6318&lang=css&","dependencies":[{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/src/components/UIComponents/Modal.vue","mtime":1664168527775},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/css-loader/dist/cjs.js","mtime":1664435185677},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1664435186093},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/postcss-loader/src/index.js","mtime":1664435185743},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/cache-loader/dist/cjs.js","mtime":1664435185541},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/vue-loader/lib/index.js","mtime":1664435186048}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1vZGFsLnNob3cgewogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zKQp9Cg=="},{"version":3,"sources":["Modal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;AACA","file":"Modal.vue","sourceRoot":"src/components/UIComponents","sourcesContent":["<template>\n  <SlideYUpTransition :duration=\"animationDuration\">\n    <div class=\"modal fade\"\n         @click.self=\"closeModal\"\n         :class=\"[{'show d-block': show}, {'d-none': !show}, {'modal-mini': type === 'mini'}]\"\n         v-show=\"show\"\n         tabindex=\"-1\"\n         role=\"dialog\"\n         :aria-hidden=\"!show\">\n\n      <div class=\"modal-dialog\"\n           :class=\"[{'modal-notice': type === 'notice'}, modalClasses]\">\n        <div class=\"modal-content\">\n\n          <div class=\"modal-header\"\n               v-if=\"showHeader\"\n               :class=\"headerClasses\">\n            <slot name=\"close-button\">\n              <button type=\"button\"\n                      v-if=\"showClose\"\n                      @click=\"closeModal\"\n                      class=\"close\"\n                      data-dismiss=\"modal\"\n                      :aria-hidden=\"!show\">\n                <i class=\"nc-icon nc-simple-remove\"></i>\n              </button>\n            </slot>\n            <slot name=\"header\"></slot>\n          </div>\n\n          <div class=\"modal-body\" :class=\"bodyClasses\">\n            <slot></slot>\n          </div>\n\n          <div class=\"modal-footer\" :class=\"footerClasses\">\n            <slot name=\"footer\"></slot>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </SlideYUpTransition>\n</template>\n<script>\n  import {SlideYUpTransition} from 'vue2-transitions'\n\n  export default {\n    name: 'modal',\n    components: {\n      SlideYUpTransition\n    },\n    props: {\n      show: Boolean,\n      showHeader: {\n        type: Boolean,\n        default: true\n      },\n      showClose: {\n        type: Boolean,\n        default: true\n      },\n      type: {\n        type: String,\n        default: '',\n        validator(value) {\n          let acceptedValues = ['', 'notice', 'mini']\n          return acceptedValues.indexOf(value) !== -1\n        },\n        description: 'Modal type (notice|mini|\"\") '\n      },\n      modalClasses: {\n        type: [Object, String],\n        description: 'Modal dialog css classes'\n      },\n      headerClasses: {\n        type: [Object, String],\n        description: 'Modal Header css classes'\n      },\n      bodyClasses: {\n        type: [Object, String],\n        description: 'Modal Body css classes'\n      },\n      footerClasses: {\n        type: [Object, String],\n        description: 'Modal Footer css classes'\n      },\n      animationDuration: {\n        type: Number,\n        default: 500,\n        description: 'Modal transition duration'\n      }\n    },\n    methods: {\n      closeModal() {\n        this.$emit('update:show', false)\n        this.$emit('close')\n      }\n    },\n    watch: {\n      show(val) {\n        let documentClasses = document.body.classList\n        if (val) {\n          documentClasses.add('modal-open')\n        } else {\n          documentClasses.remove('modal-open')\n        }\n      }\n    }\n  }\n</script>\n<style>\n  .modal.show {\n    background-color: rgba(0, 0, 0, 0.3)\n  }\n</style>\n"]}]}