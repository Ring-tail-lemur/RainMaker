{"remainingRequest":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\src\\components\\UIComponents\\SidebarPlugin\\SidebarItem.vue?vue&type=style&index=0&id=4db2580c&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\src\\components\\UIComponents\\SidebarPlugin\\SidebarItem.vue","mtime":1663216920947},{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\css-loader\\dist\\cjs.js","mtime":1663217046116},{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1663217050138},{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\postcss-loader\\src\\index.js","mtime":1663217047353},{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663217045050},{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1663217048947}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2FyZXQucm90YXRlZCB7CiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTsKfQo="},{"version":3,"sources":["SidebarItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;AACA;AACA","file":"SidebarItem.vue","sourceRoot":"src/components/UIComponents/SidebarPlugin","sourcesContent":["<template>\n  <component :is=\"baseComponent\"\n             :to=\"link.path ? link.path : '/'\"\n             :class=\"{active: isActive || $route.fullPath.startsWith(link.path)}\"\n             tag=\"li\">\n    <a v-if=\"isMenu\"\n       data-toggle=\"collapse\"\n       href=\"#\"\n       @click.prevent=\"collapseMenu\">\n      <i :class=\"link.icon\"></i>\n      <p>{{link.name}}\n        <b class=\"caret\" :class=\"{rotated: !collapsed}\"></b>\n      </p>\n    </a>\n    <collapse-transition v-if=\"$slots.default || this.isMenu\">\n      <div v-show=\"!collapsed\" class=\"collapse-menu\">\n        <ul class=\"nav\">\n          <slot></slot>\n        </ul>\n      </div>\n    </collapse-transition>\n    <slot name=\"title\" v-if=\"children.length === 0 && !$slots.default && link.path\">\n      <component\n        :to=\"link.path\"\n        :is=\"elementType(link, false)\"\n        :class=\"{active: link.active}\"\n        :target=\"link.target\"\n        @click.native.stop=\"onItemClick\"\n        :href=\"link.path\">\n        <template v-if=\"addLink\">\n          <span class=\"sidebar-mini-icon\">{{link.name.substring(0, 1)}}</span>\n          <span class=\"sidebar-normal\">{{link.name}}</span>\n        </template>\n        <template v-else>\n          <i :class=\"link.icon\"></i>\n          <p>{{link.name}}</p>\n        </template>\n      </component>\n    </slot>\n  </component>\n</template>\n<script>\n  import { CollapseTransition } from 'vue2-transitions';\n\n  export default {\n    components: {\n      CollapseTransition\n    },\n    props: {\n      menu: {\n        type: Boolean,\n        default: false,\n        description: 'Whether item is a menu containing multiple items'\n      },\n      link: {\n        type: Object,\n        default: () => {\n          return {\n            name: '',\n            path: '',\n            children: []\n          }\n        },\n        description: 'Link object'\n      }\n    },\n    provide() {\n      return {\n        addLink: this.addChild,\n        removeLink: this.removeChild\n      }\n    },\n    inject: {\n      addLink: { default: null },\n      removeLink: { default: null },\n      autoClose: { default: false },\n    },\n    data() {\n      return {\n        children: [],\n        collapsed: true\n      }\n    },\n    computed: {\n      baseComponent() {\n        return this.isMenu || this.link.isRoute ? 'li' : 'router-link'\n      },\n      isMenu() {\n        return this.children.length > 0 || this.menu === true\n      },\n      isActive() {\n        if (this.$route) {\n          let matchingRoute = this.children\n            .find((c) => this.$route.path.startsWith(c.link.path))\n          if (matchingRoute !== undefined) {\n            return true\n          }\n        }\n        return false\n      }\n    },\n    methods: {\n      addChild(item) {\n        const index = this.$slots.default.indexOf(item.$vnode)\n        this.children.splice(index, 0, item)\n      },\n      removeChild(item) {\n        const tabs = this.children\n        const index = tabs.indexOf(item)\n        tabs.splice(index, 1)\n      },\n      elementType(link, isParent = true) {\n        if (link.isRoute === false) {\n          return isParent ? 'li' : 'a'\n        } else {\n          return 'router-link'\n        }\n      },\n      collapseMenu() {\n        this.collapsed = !this.collapsed\n      },\n      onItemClick() {\n        if(this.autoClose) {\n          this.$sidebar.showSidebar = false;\n        }\n      }\n    },\n    mounted() {\n      if (this.addLink) {\n        this.addLink(this)\n      }\n      if (this.link.collapsed !== undefined) {\n        this.collapsed = this.link.collapsed\n      }\n      if (this.isActive && this.isMenu) {\n        this.collapsed = false\n      }\n    },\n    destroyed() {\n      if (this.$el && this.$el.parentNode) {\n        this.$el.parentNode.removeChild(this.$el)\n      }\n      if (this.removeLink) {\n        this.removeLink(this)\n      }\n    }\n  }\n</script>\n<style scoped>\n  .caret.rotated {\n    transform: rotate(180deg);\n  }\n</style>\n"]}]}