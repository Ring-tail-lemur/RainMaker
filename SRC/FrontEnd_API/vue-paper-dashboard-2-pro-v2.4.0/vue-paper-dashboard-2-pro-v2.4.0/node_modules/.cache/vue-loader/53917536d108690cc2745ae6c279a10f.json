{"remainingRequest":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/src/components/UIComponents/SidebarPlugin/SideBar.vue?vue&type=style&index=0&id=7db87da7&lang=css&","dependencies":[{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/src/components/UIComponents/SidebarPlugin/SideBar.vue","mtime":1664168527775},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/css-loader/dist/cjs.js","mtime":1664435185677},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1664435186093},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/postcss-loader/src/index.js","mtime":1664435185743},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/cache-loader/dist/cjs.js","mtime":1664435185541},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/vue-loader/lib/index.js","mtime":1664435186048}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHsKICAubmF2YmFyLXNlYXJjaC1mb3JtLW1vYmlsZSwKICAubmF2LW1vYmlsZS1tZW51ewogICAgZGlzcGxheTogbm9uZTsKICB9Cn0K"},{"version":3,"sources":["SideBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;AACA;AACA","file":"SideBar.vue","sourceRoot":"src/components/UIComponents/SidebarPlugin","sourcesContent":["<template>\n  <div class=\"sidebar\"\n       :data-color=\"backgroundColor\"\n       :data-active-color=\"activeColor\">\n    <div class=\"logo\">\n      <a class=\"simple-text logo-mini\"\n         aria-label=\"sidebar mini logo\"\n         href=\"https://www.creative-tim.com/product/vue-paper-dashboard-2-pro\">\n          <div class=\"logo-img\">\n              <img :src=\"logo\" alt=\"\">\n          </div>\n      </a>\n      <a class=\"simple-text logo-normal\"\n         href=\"https://www.creative-tim.com/vue-paper-dashboard-2-pro\">\n          {{ title }}\n      </a>\n    </div>\n    <div class=\"sidebar-wrapper\" ref=\"sidebarScrollArea\">\n      <slot>\n\n      </slot>\n      <ul class=\"nav\">\n        <slot name=\"links\">\n          <sidebar-item v-for=\"(link, index) in sidebarLinks\"\n                        :key=\"link.name + index\"\n                        :link=\"link\">\n\n            <sidebar-item v-for=\"(subLink, index) in link.children\"\n                          :key=\"subLink.name + index\"\n                          :link=\"subLink\">\n            </sidebar-item>\n          </sidebar-item>\n        </slot>\n\n      </ul>\n    </div>\n  </div>\n</template>\n<script>\n  import 'perfect-scrollbar/css/perfect-scrollbar.css'\n  export default {\n    props: {\n      title: {\n        type: String,\n        default: 'Vue PDP Pro',\n        description: 'Sidebar title'\n      },\n      backgroundColor: {\n        type: String,\n        default: 'black',\n        validator: (value) => {\n          let acceptedValues = ['white', 'brown', 'black']\n          return acceptedValues.indexOf(value) !== -1\n        },\n        description: 'Sidebar background color (white|brown|black)'\n      },\n      activeColor: {\n        type: String,\n        default: 'success',\n        validator: (value) => {\n          let acceptedValues = ['primary', 'info', 'success', 'warning', 'danger']\n          return acceptedValues.indexOf(value) !== -1\n        },\n        description: 'Sidebar active text color (primary|info|success|warning|danger)'\n      },\n      logo: {\n        type: String,\n        default: 'static/img/vue-logo.png',\n        description: 'Sidebar Logo'\n      },\n      sidebarLinks: {\n        type: Array,\n        default: () => [],\n        description: 'Sidebar links. Can be also provided as children components (sidebar-item)'\n      },\n      autoClose: {\n        type: Boolean,\n        default: true\n      }\n    },\n    provide() {\n      return {\n        autoClose: this.autoClose\n      }\n    },\n    methods: {\n      async initScrollBarAsync () {\n        let isWindows = navigator.platform.startsWith('Win');\n        if(!isWindows) {\n          return;\n        }\n        const PerfectScroll = await import('perfect-scrollbar')\n        PerfectScroll.initialize(this.$refs.sidebarScrollArea)\n      }\n    },\n    mounted () {\n      this.initScrollBarAsync()\n    },\n    beforeDestroy () {\n      if (this.$sidebar.showSidebar) {\n        this.$sidebar.showSidebar = false\n      }\n    }\n  }\n\n</script>\n<style>\n  @media (min-width: 992px) {\n    .navbar-search-form-mobile,\n    .nav-mobile-menu{\n      display: none;\n    }\n  }\n</style>\n"]}]}