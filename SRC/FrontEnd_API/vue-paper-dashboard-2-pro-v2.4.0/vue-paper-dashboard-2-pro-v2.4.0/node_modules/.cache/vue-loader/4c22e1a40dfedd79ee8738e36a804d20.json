{"remainingRequest":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/src/components/Dashboard/Views/Custom/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/src/components/Dashboard/Views/Custom/Dashboard.vue","mtime":1665119838498},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/cache-loader/dist/cjs.js","mtime":1664435185541},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/babel-loader/lib/index.js","mtime":1664435185750},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/cache-loader/dist/cjs.js","mtime":1664435185541},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/vue-loader/lib/index.js","mtime":1664435186048}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA","file":"Dashboard.vue","sourceRoot":"src/components/Dashboard/Views/Custom","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n        <h4 class=\"card-title\">시작 시간</h4>\n        <div class=\"form-group\">\n          <el-date-picker v-model=\"startTime\" type=\"date\" placeholder=\"Pick a day\"\n                          :picker-options=\"{ disabledDate: (time) => disabledEndDate(time, null) }\">\n          </el-date-picker>\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <h4 class=\"card-title\">끝 시간</h4>\n        <div class=\"form-group\">\n          <el-date-picker v-model=\"endTime\" type=\"date\" placeholder=\"Pick a day\"\n                          :picker-options=\"{ disabledDate: (time) => disabledEndDate(time, null) }\">\n          </el-date-picker>\n        </div>\n      </div>\n      <div class=\"col-sm-3\">\n        <h4 class=\"card-title\">리포지토리 선택</h4>\n        <fg-input>\n          <el-select multiple class=\"select-primary\"\n                     size=\"large\"\n                     v-model=\"selects.multiple\"\n                     placeholder=\"Multiple Select\">\n            <el-option v-for=\"option in selects.repositories\"\n                       class=\"select-primary\"\n                       :value=\"option.repositoryId\"\n                       :label=\"option.repositoryName\"\n                       :key=\"option.repositoryName\">\n            </el-option>\n          </el-select>\n        </fg-input>\n      </div>\n      <div class=\"col-md-2\">\n        <br><br><br>\n        <p-button v-on:click=\"submitButtonPush()\">제출하기</p-button>\n      </div>\n    </div>\n\n\n    <div class=\"row\">\n      <div class=\"col-lg-5 col-sm-6\" >\n        <chart-card :chart-data=\"LeadTimeForChange.data\"\n                    chart-id=\"activity-chart\"\n                    :color=\"LeadTimeForChange.color\"\n                    chart-title=\"TOTAL EARNINGS IN LAST TEN QUARTERS\">\n          <span slot=\"title\">리드 타임</span>\n          <badge slot=\"title-label\" :type=\"LeadTimeForChange.rate\">{{LeadTimeForChange.rate}}</badge>\n\n\n        </chart-card>\n      </div>\n\n      <div class=\"col-lg-5 col-sm-6\">\n        <chart-card :chart-data=\"DeploymentFrequency.data\"\n                    chart-id=\"emails-chart\"\n                    :color=\"DeploymentFrequency.color\" chart-title=\"TOTAL SUBSCRIPTIONS IN LAST 7 DAYS\">\n          <span slot=\"title\">배포 빈도</span>\n          <badge slot=\"title-label\" :type=\"DeploymentFrequency.rate\">{{DeploymentFrequency.rate}}</badge>\n\n        </chart-card>\n      </div>\n\n      <div class=\"col-lg-5 col-sm-6\">\n        <chart-card :chart-data=\"ChangeFailureRate.data\"\n                    chart-id=\"active-countries-chart\"\n                    :color=\"ChangeFailureRate.color\" chart-title=\"Active Countries\">\n          <span slot=\"title\">변화실패율</span>\n          <badge slot=\"title-label\" :type=\"ChangeFailureRate.rate\">{{ChangeFailureRate.rate}}</badge>\n\n        </chart-card>\n      </div>\n\n      <div class=\"col-lg-5 col-sm-6\">\n        <chart-card :chart-data=\"MTTR.data\"\n                    chart-id=\"active-countries-chart\"\n                    :color=\"MTTR.color\" chart-title=\"Active Countries\">\n          <span slot=\"title\">평균회복시간</span>\n          <badge slot=\"title-label\" :type=\"MTTR.rate\">{{MTTR.rate}}</badge>\n\n        </chart-card>\n      </div>\n    </div>\n\n\n\n\n    <div class=\"row\">\n      <div class=\"col-lg-3 col-sm-6\">\n        <circle-chart-card :percentage=\"70\"\n                           chart-id=\"email-statistics-chart\"\n                           title=\"Email Statistics\"\n                           description=\"Last Campaign Performance\"\n                           color=\"#4acccd\">\n          <template slot=\"footer\">\n            <div class=\"legend\">\n              <i class=\"fa fa-circle text-info\"></i> Open\n            </div>\n            <hr>\n            <div class=\"stats\">\n              <i class=\"fa fa-calendar\"></i> Number of emails sent\n            </div>\n          </template>\n        </circle-chart-card>\n      </div>\n\n      <div class=\"col-lg-3 col-sm-6\">\n        <circle-chart-card :percentage=\"34\"\n                           chart-id=\"new-visitors-chart\"\n                           title=\"New Visitators\"\n                           description=\"Out Of Total Number\"\n                           color=\"#fcc468\">\n          <template slot=\"footer\">\n            <div class=\"legend\">\n              <i class=\"fa fa-circle text-warning\"></i> Visited\n            </div>\n            <hr>\n            <div class=\"stats\">\n              <i class=\"fa fa-check\"></i> Campaign sent 2 days ago\n            </div>\n          </template>\n        </circle-chart-card>\n      </div>\n\n      <div class=\"col-lg-3 col-sm-6\">\n        <circle-chart-card :percentage=\"80\"\n                           title=\"Orders\"\n                           chart-id=\"orders-chart\"\n                           description=\"Total Number\"\n                           color=\"#f17e5d\">\n          <template slot=\"footer\">\n            <div class=\"legend\">\n              <i class=\"fa fa-circle text-danger\"></i> Completed\n            </div>\n            <hr>\n            <div class=\"stats\">\n              <i class=\"fa fa-clock-o\"></i> Updated 3 minutes ago\n            </div>\n          </template>\n        </circle-chart-card>\n      </div>\n\n      <div class=\"col-lg-3 col-sm-6\">\n        <circle-chart-card :percentage=\"11\"\n                           title=\"Subscriptions\"\n                           description=\"Our Users\"\n                           color=\"#66615b\">\n          <template slot=\"footer\">\n            <div class=\"legend\">\n              <i class=\"fa fa-circle text-secondary\"></i> Ended\n            </div>\n            <hr>\n            <div class=\"stats\">\n              <i class=\"fa fa-history\"></i> Total users\n            </div>\n          </template>\n        </circle-chart-card>\n      </div>\n    </div>\n\n  </div>\n</template>\n<script>\nimport CircleChartCard from 'src/components/UIComponents/Cards/CircleChartCard.vue'\nimport ChartCard from 'src/components/UIComponents/Cards/ChartCard';\nimport StatsCard from 'src/components/UIComponents/Cards/StatsCard';\nimport {Badge} from 'src/components/UIComponents'\nimport Loading from 'src/components/Dashboard/Layout/LoadingMainPanel.vue'\nimport TaskList from \"src/components/Dashboard/Views/Dashboard/Widgets/TaskList\";\nimport {Button, DatePicker, Input, Option, Select, Slider, Tag, TimeSelect} from \"element-ui\";\nimport axios from \"axios\";\nimport setHeaderJWT from \"@/util/setHeaderJWT\";\n\nconst WorldMap = () => ({\n  component: import('./../Maps/WorldMap.vue'),\n  loading: Loading,\n  delay: 200\n})\n\nexport default {\n  components: {\n    [DatePicker.name]: DatePicker,\n    [TimeSelect.name]: TimeSelect,\n    [Slider.name]: Slider,\n    [Tag.name]: Tag,\n    [Input.name]: Input,\n    [Button.name]: Button,\n    [Option.name]: Option,\n    [Select.name]: Select,\n    StatsCard,\n    ChartCard,\n    CircleChartCard,\n    WorldMap,\n    Badge,\n    TaskList\n  },\n  /**\n   * Chart data used to render stats, charts. Should be replaced with server data\n   */\n  watch: {\n    endTime() {\n      if(this.startTime != '') {\n        if( this.endTime < this.startTime) {\n          alert(\"끝시간은 시작시간보다 커야합니다\");\n          this.endTime = '';\n        }\n      }\n    },\n    startTime() {\n      if(this.endTime != '') {\n        if( this.endTime < this.startTime) {\n          alert(\"시작시간은 끝시간보다 작아야합니다\");\n          this.startTime = '';\n        }\n      }\n    }\n  },\n  data () {\n    return {\n      LeadTimeForChange: {\n        color : \"#ef8156\",\n        rate : \"seed\",\n        data: {\n          labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\"],\n          series: [542, 480, 430, 550, 530, 453, 380, 434, 568, 610]\n        }\n      },\n      DeploymentFrequency: {\n        color : \"#41B883\",\n        rate : \"fruit\",\n        data: {\n          labels: [\"12pm\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\n          series: [40, 500, 650, 700, 1200, 1250, 1300, 1900]\n        }\n      },\n      ChangeFailureRate: {\n        color : \"#68B3C8\",\n        rate : \"flower\",\n        data: {\n          labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\"],\n          series: [80, 78, 86, 96, 83, 85, 76, 75, 88, 90]\n        }\n      },\n      MTTR: {\n        color : \"#fcc468\",\n        rate : \"sprout\",\n        data: {\n          labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\"],\n          series: [80, 78, 86, 96, 83, 85, 76, 75, 88, 90]\n        }\n      },\n      startTime: '',\n      endTime : '',\n\n      selects: {\n        simple: '',\n        repositories: [\n          {value: '510731046', label: 'RainMaker'},\n          {value: '517528822', label: 'test-for-fake-project'},\n          {value: '193281821', label: 'gugudan'},\n          ],\n        multiple: 'ARS'\n      },\n\n    }\n  },\n  methods : {\n    async getRepositoryInfo() {\n      return (await axios.get(this.custom.defaultURL + \"/user/repository-info\", {\n        headers: setHeaderJWT()\n      })).data;\n    },\n    submitButtonPush() {\n      try {\n        this.getAllDoraMetric(this.dateFormat(this.startTime), this.dateFormat(this.endTime), this.selects.multiple);\n      } catch (e) {\n        alert(\"잘못 입력하셨습니다.\");\n        console.error(e);\n        return;\n      }\n    },\n    disabledEndDate(date, departureDate) {\n      // If departureDate then return valid dates after departureDate\n\n      if (departureDate) {\n        return date.getTime() < departureDate\n      } else {\n        // If !departureDate then return valid dates after today\n        return date.getTime() > Date.now() || date.getTime() < Date.now() - 7776000000;\n      }\n    },\n    getAllDoraMetric(start_time, end_time, repo_id) {\n      if(start_time === undefined || end_time === undefined || repo_id === undefined) {\n        alert(\"잘못 입력하셨습니다.\");\n        return;\n      }\n      this.getDoraMetric(start_time, end_time, repo_id,\"lead-time-for-change\");\n      this.getDoraMetric(start_time, end_time, repo_id,\"time-to-restore-service\");\n      this.getDoraMetric(start_time, end_time, repo_id,\"change-failure-rate\");\n      this.getDoraMetric(start_time, end_time, repo_id,\"deployment-frequency\");\n    },\n    async getDoraMetric(start_time, end_time, repo_id, MetricName) {\n      const Message = await axios.get(this.custom.defaultURL + \"/dorametric/\" + MetricName, {\n        params : {\n          start_time : start_time,\n          end_time : end_time,\n          repo_id : repo_id.toString()\n        }\n      })\n\n      let BodyData = Message.data;\n      let info;\n      if(BodyData.hasOwnProperty('leadTimeForChangeMap')){\n        info = BodyData.leadTimeForChangeMap;\n      } else if(BodyData.hasOwnProperty('changeFailureRateMap')) {\n        info = BodyData.changeFailureRateMap;\n      } else if(BodyData.hasOwnProperty('deploymentFrequencyMap')) {\n        info = BodyData.deploymentFrequencyMap;\n      } else if(BodyData.hasOwnProperty('timeToRestoreServiceMap')) {\n        info = BodyData.timeToRestoreServiceMap;\n      }\n\n\n      let date_arr = [];\n      let average_time = [];\n\n      const st = new Date(start_time);\n      const en = new Date(end_time);\n\n\n      while(st <= en) {\n        date_arr.push(this.dateFormat(st));\n        if( info[this.dateFormat(st)] ) {\n          average_time.push(info[this.dateFormat(st)]);\n        } else {\n          average_time.push(0);\n        }\n        st.setDate(st.getDate() + 1);\n      }\n\n      const level = BodyData.level.toLowerCase();\n      if(MetricName === \"lead-time-for-change\"){\n        this.LeadTimeForChange.data.labels = date_arr;\n        this.LeadTimeForChange.data.series = average_time;\n        this.LeadTimeForChange.rate = level;\n        this.LeadTimeForChange.color = this.colorPickByLevel(level);\n      } else if(MetricName === \"time-to-restore-service\") {\n        this.MTTR.data.labels = date_arr;\n        this.MTTR.data.series = average_time;\n        this.MTTR.rate = level;\n        this.MTTR.color = this.colorPickByLevel(level);\n      } else if(MetricName === \"change-failure-rate\") {\n        this.ChangeFailureRate.data.labels = date_arr;\n        this.ChangeFailureRate.data.series = average_time;\n        this.ChangeFailureRate.rate = level;\n        this.ChangeFailureRate.color = this.colorPickByLevel(level);\n      } else if(MetricName === \"deployment-frequency\") {\n        this.DeploymentFrequency.data.labels = date_arr;\n        this.DeploymentFrequency.data.series = average_time;\n        this.DeploymentFrequency.rate = level;\n        this.DeploymentFrequency.color = this.colorPickByLevel(level);\n      }\n\n    },\n    dateFormat(date) {\n      let month = date.getMonth() + 1;\n      let day = date.getDate();\n\n      month = month >= 10 ? month : '0' + month;\n      day = day >= 10 ? day : '0' + day;\n\n      return date.getFullYear() + '-' + month + '-' + day;\n    },\n    colorPickByLevel(level) {\n      if(level == \"seed\") {\n        return \"#ef8156\";\n      } else if(level == \"sprout\") {\n        return \"#fcc468\";\n      } else if(level == \"flower\") {\n        return \"#68B3C8\";\n      } else if(level == \"fruit\") {\n        return \"#41B883\";\n      }\n    }\n  },\n  async created() {\n    let Today = new Date();\n    const FormatToday = this.dateFormat(Today);\n    Today.setMonth(Today.getMonth() -1);\n    const FormatLastMonth = this.dateFormat(Today);\n\n    const repositories = await this.getRepositoryInfo();\n    this.selects.repositories = repositories;\n\n    const repositoryArr = [];\n\n    repositories.forEach((repository) => {\n      repositoryArr.push(repository['repositoryId']);\n    });\n\n    this.getAllDoraMetric(FormatLastMonth, FormatToday, repositoryArr);\n\n  }\n}\n\n</script>\n<style>\n\n</style>\n"]}]}