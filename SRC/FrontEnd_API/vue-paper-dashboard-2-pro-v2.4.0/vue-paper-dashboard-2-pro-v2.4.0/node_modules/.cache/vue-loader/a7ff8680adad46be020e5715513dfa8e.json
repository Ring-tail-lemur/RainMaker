{"remainingRequest":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\src\\components\\Dashboard\\Views\\Tables\\PaginatedTables.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\src\\components\\Dashboard\\Views\\Tables\\PaginatedTables.vue","mtime":1663216916877},{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663217045050},{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1663217045311},{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663217045050},{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1663217048947}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQge1RhYmxlLCBUYWJsZUNvbHVtbiwgU2VsZWN0LCBPcHRpb259IGZyb20gJ2VsZW1lbnQtdWknCmltcG9ydCBQUGFnaW5hdGlvbiBmcm9tICdzcmMvY29tcG9uZW50cy9VSUNvbXBvbmVudHMvUGFnaW5hdGlvbi52dWUnCmltcG9ydCB1c2VycyBmcm9tICcuL3VzZXJzJwpWdWUudXNlKFRhYmxlKQpWdWUudXNlKFRhYmxlQ29sdW1uKQpWdWUudXNlKFNlbGVjdCkKVnVlLnVzZShPcHRpb24pCmV4cG9ydCBkZWZhdWx0ewogIGNvbXBvbmVudHM6IHsKICAgIFBQYWdpbmF0aW9uCiAgfSwKICBjb21wdXRlZDogewogICAgcGFnZWREYXRhICgpIHsKICAgICAgcmV0dXJuIHRoaXMudGFibGVEYXRhLnNsaWNlKHRoaXMuZnJvbSwgdGhpcy50bykKICAgIH0sCiAgICAvKioqCiAgICAgKiBTZWFyY2hlcyB0aHJvdWdoIHRhYmxlIGRhdGEgYW5kIHJldHVybnMgYSBwYWdpbmF0ZWQgYXJyYXkuCiAgICAgKiBOb3RlIHRoYXQgdGhpcyBzaG91bGQgbm90IGJlIHVzZWQgZm9yIHRhYmxlIHdpdGggYSBsb3Qgb2YgZGF0YSBhcyBpdCBtaWdodCBiZSBzbG93IQogICAgICogRG8gdGhlIHNlYXJjaCBhbmQgdGhlIHBhZ2luYXRpb24gb24gdGhlIHNlcnZlciBhbmQgZGlzcGxheSB0aGUgZGF0YSByZXRyaWV2ZWQgZnJvbSBzZXJ2ZXIgaW5zdGVhZC4KICAgICAqIEByZXR1cm5zIHtjb21wdXRlZC5wYWdlZERhdGF9CiAgICAgKi8KICAgIHF1ZXJpZWREYXRhICgpIHsKICAgICAgaWYgKCF0aGlzLnNlYXJjaFF1ZXJ5KSB7CiAgICAgICAgdGhpcy5wYWdpbmF0aW9uLnRvdGFsID0gdGhpcy50YWJsZURhdGEubGVuZ3RoCiAgICAgICAgcmV0dXJuIHRoaXMucGFnZWREYXRhCiAgICAgIH0KICAgICAgbGV0IHJlc3VsdCA9IHRoaXMudGFibGVEYXRhCiAgICAgICAgLmZpbHRlcigocm93KSA9PiB7CiAgICAgICAgICBsZXQgaXNJbmNsdWRlZCA9IGZhbHNlCiAgICAgICAgICBmb3IgKGxldCBrZXkgb2YgdGhpcy5wcm9wc1RvU2VhcmNoKSB7CiAgICAgICAgICAgIGxldCByb3dWYWx1ZSA9IHJvd1trZXldLnRvU3RyaW5nKCkKICAgICAgICAgICAgaWYgKHJvd1ZhbHVlLmluY2x1ZGVzICYmIHJvd1ZhbHVlLmluY2x1ZGVzKHRoaXMuc2VhcmNoUXVlcnkpKSB7CiAgICAgICAgICAgICAgaXNJbmNsdWRlZCA9IHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIGlzSW5jbHVkZWQKICAgICAgICB9KQogICAgICB0aGlzLnBhZ2luYXRpb24udG90YWwgPSByZXN1bHQubGVuZ3RoCiAgICAgIHJldHVybiByZXN1bHQuc2xpY2UodGhpcy5mcm9tLCB0aGlzLnRvKQogICAgfSwKICAgIHRvICgpIHsKICAgICAgbGV0IGhpZ2hCb3VuZCA9IHRoaXMuZnJvbSArIHRoaXMucGFnaW5hdGlvbi5wZXJQYWdlCiAgICAgIGlmICh0aGlzLnRvdGFsIDwgaGlnaEJvdW5kKSB7CiAgICAgICAgaGlnaEJvdW5kID0gdGhpcy50b3RhbAogICAgICB9CiAgICAgIHJldHVybiBoaWdoQm91bmQKICAgIH0sCiAgICBmcm9tICgpIHsKICAgICAgcmV0dXJuIHRoaXMucGFnaW5hdGlvbi5wZXJQYWdlICogKHRoaXMucGFnaW5hdGlvbi5jdXJyZW50UGFnZSAtIDEpCiAgICB9LAogICAgdG90YWwgKCkgewogICAgICB0aGlzLnBhZ2luYXRpb24udG90YWwgPSB0aGlzLnRhYmxlRGF0YS5sZW5ndGgKICAgICAgcmV0dXJuIHRoaXMudGFibGVEYXRhLmxlbmd0aAogICAgfQogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBwYWdpbmF0aW9uOiB7CiAgICAgICAgcGVyUGFnZTogNSwKICAgICAgICBjdXJyZW50UGFnZTogMSwKICAgICAgICBwZXJQYWdlT3B0aW9uczogWzUsIDEwLCAyNSwgNTBdLAogICAgICAgIHRvdGFsOiAwCiAgICAgIH0sCiAgICAgIHNlYXJjaFF1ZXJ5OiAnJywKICAgICAgcHJvcHNUb1NlYXJjaDogWyduYW1lJywgJ2VtYWlsJywgJ2FnZSddLAogICAgICB0YWJsZUNvbHVtbnM6IFsKICAgICAgICB7CiAgICAgICAgICBwcm9wOiAnbmFtZScsCiAgICAgICAgICBsYWJlbDogJ05hbWUnLAogICAgICAgICAgbWluV2lkdGg6IDIwMAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgcHJvcDogJ2VtYWlsJywKICAgICAgICAgIGxhYmVsOiAnRW1haWwnLAogICAgICAgICAgbWluV2lkdGg6IDI1MAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgcHJvcDogJ2FnZScsCiAgICAgICAgICBsYWJlbDogJ0FnZScsCiAgICAgICAgICBtaW5XaWR0aDogMTAwCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBwcm9wOiAnc2FsYXJ5JywKICAgICAgICAgIGxhYmVsOiAnU2FsYXJ5JywKICAgICAgICAgIG1pbldpZHRoOiAxMjAKICAgICAgICB9CiAgICAgIF0sCiAgICAgIHRhYmxlRGF0YTogdXNlcnMKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUxpa2UgKGluZGV4LCByb3cpIHsKICAgICAgYWxlcnQoYFlvdXIgd2FudCB0byBsaWtlICR7cm93Lm5hbWV9YCkKICAgIH0sCiAgICBoYW5kbGVFZGl0IChpbmRleCwgcm93KSB7CiAgICAgIGFsZXJ0KGBZb3VyIHdhbnQgdG8gZWRpdCAke3Jvdy5uYW1lfWApCiAgICB9LAogICAgaGFuZGxlRGVsZXRlIChpbmRleCwgcm93KSB7CiAgICAgIGxldCBpbmRleFRvRGVsZXRlID0gdGhpcy50YWJsZURhdGEuZmluZEluZGV4KCh0YWJsZVJvdykgPT4gdGFibGVSb3cuaWQgPT09IHJvdy5pZCkKICAgICAgaWYgKGluZGV4VG9EZWxldGUgPj0gMCkgewogICAgICAgIHRoaXMudGFibGVEYXRhLnNwbGljZShpbmRleFRvRGVsZXRlLCAxKQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["PaginatedTables.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"PaginatedTables.vue","sourceRoot":"src/components/Dashboard/Views/Tables","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <h4 class=\"title\">Custom table with pagination</h4>\n      <p class=\"category\">\n        We combine <a href=\"http://element.eleme.io/#/en-US/component/quickstart\" target=\"_blank\" rel=\"noopener\">Element-UI</a>\n        table functionalities together with a custom pagination component\n        which should provide a very good starting point to integrate tables in your application.\n        Check out more functionalities at <a href=\"http://element.eleme.io/#/en-US/component/table\" target=\"_blank\" rel=\"noopener\">Element-UI table documentation</a>.\n       </p>\n    </div>\n    <div class=\"col-md-12 card\">\n      <div class=\"card-header\">\n        <div class=\"category\">Extended tables</div>\n      </div>\n      <div class=\"card-body row\">\n        <div class=\"col-sm-6\">\n          <el-select\n            class=\"select-default\"\n            v-model=\"pagination.perPage\"\n            placeholder=\"Per page\">\n            <el-option\n              class=\"select-default\"\n              v-for=\"item in pagination.perPageOptions\"\n              :key=\"item\"\n              :label=\"item\"\n              :value=\"item\">\n            </el-option>\n          </el-select>\n        </div>\n        <div class=\"col-sm-6\">\n          <div class=\"pull-right\">\n            <fg-input class=\"input-sm\"\n                      placeholder=\"Search\"\n                      v-model=\"searchQuery\"\n                      addon-right-icon=\"nc-icon nc-zoom-split\">\n            </fg-input>\n          </div>\n        </div>\n        <div class=\"col-sm-12 mt-2\">\n          <el-table class=\"table-striped\"\n                    :data=\"queriedData\"\n                    border\n                    style=\"width: 100%\">\n            <el-table-column v-for=\"column in tableColumns\"\n                             :key=\"column.label\"\n                             :min-width=\"column.minWidth\"\n                             :prop=\"column.prop\"\n                             :label=\"column.label\">\n            </el-table-column>\n            <el-table-column\n              :min-width=\"120\"\n              fixed=\"right\"\n              class-name=\"td-actions\"\n              label=\"Actions\">\n              <template slot-scope=\"props\">\n                <p-button type=\"info\" size=\"sm\" icon @click=\"handleLike(props.$index, props.row)\">\n                  <i class=\"fa fa-user\"></i>\n                </p-button>\n                <p-button type=\"success\" size=\"sm\" icon @click=\"handleEdit(props.$index, props.row)\">\n                  <i class=\"fa fa-edit\"></i>\n                </p-button>\n                <p-button type=\"danger\" size=\"sm\" icon @click=\"handleDelete(props.$index, props.row)\">\n                  <i class=\"fa fa-times\"></i>\n                </p-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n        <div class=\"col-sm-6 pagination-info\">\n          <p class=\"category\">Showing {{from + 1}} to {{to}} of {{total}} entries</p>\n        </div>\n        <div class=\"col-sm-6\">\n          <p-pagination class=\"pull-right\"\n                        v-model=\"pagination.currentPage\"\n                        :per-page=\"pagination.perPage\"\n                        :total=\"pagination.total\">\n          </p-pagination>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import Vue from 'vue'\n  import {Table, TableColumn, Select, Option} from 'element-ui'\n  import PPagination from 'src/components/UIComponents/Pagination.vue'\n  import users from './users'\n  Vue.use(Table)\n  Vue.use(TableColumn)\n  Vue.use(Select)\n  Vue.use(Option)\n  export default{\n    components: {\n      PPagination\n    },\n    computed: {\n      pagedData () {\n        return this.tableData.slice(this.from, this.to)\n      },\n      /***\n       * Searches through table data and returns a paginated array.\n       * Note that this should not be used for table with a lot of data as it might be slow!\n       * Do the search and the pagination on the server and display the data retrieved from server instead.\n       * @returns {computed.pagedData}\n       */\n      queriedData () {\n        if (!this.searchQuery) {\n          this.pagination.total = this.tableData.length\n          return this.pagedData\n        }\n        let result = this.tableData\n          .filter((row) => {\n            let isIncluded = false\n            for (let key of this.propsToSearch) {\n              let rowValue = row[key].toString()\n              if (rowValue.includes && rowValue.includes(this.searchQuery)) {\n                isIncluded = true\n              }\n            }\n            return isIncluded\n          })\n        this.pagination.total = result.length\n        return result.slice(this.from, this.to)\n      },\n      to () {\n        let highBound = this.from + this.pagination.perPage\n        if (this.total < highBound) {\n          highBound = this.total\n        }\n        return highBound\n      },\n      from () {\n        return this.pagination.perPage * (this.pagination.currentPage - 1)\n      },\n      total () {\n        this.pagination.total = this.tableData.length\n        return this.tableData.length\n      }\n    },\n    data () {\n      return {\n        pagination: {\n          perPage: 5,\n          currentPage: 1,\n          perPageOptions: [5, 10, 25, 50],\n          total: 0\n        },\n        searchQuery: '',\n        propsToSearch: ['name', 'email', 'age'],\n        tableColumns: [\n          {\n            prop: 'name',\n            label: 'Name',\n            minWidth: 200\n          },\n          {\n            prop: 'email',\n            label: 'Email',\n            minWidth: 250\n          },\n          {\n            prop: 'age',\n            label: 'Age',\n            minWidth: 100\n          },\n          {\n            prop: 'salary',\n            label: 'Salary',\n            minWidth: 120\n          }\n        ],\n        tableData: users\n      }\n    },\n    methods: {\n      handleLike (index, row) {\n        alert(`Your want to like ${row.name}`)\n      },\n      handleEdit (index, row) {\n        alert(`Your want to edit ${row.name}`)\n      },\n      handleDelete (index, row) {\n        let indexToDelete = this.tableData.findIndex((tableRow) => tableRow.id === row.id)\n        if (indexToDelete >= 0) {\n          this.tableData.splice(indexToDelete, 1)\n        }\n      }\n    }\n  }\n</script>\n<style lang=\"scss\">\n  .el-table .td-actions{\n  button.btn {\n    margin-right: 5px;\n  }\n  }\n</style>\n"]}]}