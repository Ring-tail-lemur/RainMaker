{"remainingRequest":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/src/components/Dashboard/Views/Custom/RepositorySelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/src/components/Dashboard/Views/Custom/RepositorySelect.vue","mtime":1665119838498},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/cache-loader/dist/cjs.js","mtime":1664435185541},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/babel-loader/lib/index.js","mtime":1664435185750},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/cache-loader/dist/cjs.js","mtime":1664435185541},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/vue-loader/lib/index.js","mtime":1664435186048}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQge1RhYmxlLCBUYWJsZUNvbHVtbn0gZnJvbSAnZWxlbWVudC11aScKaW1wb3J0IFBTd2l0Y2ggZnJvbSAnc3JjL2NvbXBvbmVudHMvVUlDb21wb25lbnRzL1N3aXRjaC52dWUnCmltcG9ydCB7QnV0dG9ufSBmcm9tICJAL2NvbXBvbmVudHMvVUlDb21wb25lbnRzIjsKaW1wb3J0IHNldEhlYWRlckpXVCBmcm9tICJAL2FwaS9zZXRIZWFkZXJKV1QiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgdGFiIGZyb20gIkAvY29tcG9uZW50cy9VSUNvbXBvbmVudHMvVGFicy9UYWIiOwpWdWUudXNlKFRhYmxlKQpWdWUudXNlKFRhYmxlQ29sdW1uKQpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgUFN3aXRjaCwKICAgIFtCdXR0b24ubmFtZV06IEJ1dHRvbgogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lOiAiUmVwb3NpdG9yeVNlbGVjdCIsCiAgICAgIHRhYmxlRGF0YTogW10sCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRMaXN0KCk7CiAgfSwKICBtZXRob2RzIDogewogICAgYXN5bmMgZ2V0TGlzdCAoKSB7CiAgICAgIGNvbnNvbGUubG9nKCJzZXRIZWFkZXJKV1QoKSIsIHNldEhlYWRlckpXVCgpKTsKICAgICAgY29uc3QgUmVwb3NpdG9yeUluZm8gPSBhd2FpdCBheGlvcyh7CiAgICAgICAgaGVhZGVyczogc2V0SGVhZGVySldUKCksCiAgICAgICAgbWV0aG9kOiAiZ2V0IiwKICAgICAgICB1cmw6IHRoaXMuY3VzdG9tLmRlZmF1bHRVUkwgKyAiL1JlcG9zaXRvcnlTZWxlY3QiLAogICAgICB9KTsKICAgICAgdGhpcy50YWJsZURhdGEgPSBSZXBvc2l0b3J5SW5mby5kYXRhOwogICAgfSwKICAgIGFzeW5jIHJlZ2lzdGVyUmVwb3NpdG9yeSgpIHsKICAgICAgbGV0IHRhYmxlRGF0YSA9IHRoaXMudGFibGVEYXRhOwogICAgICBsZXQgcmVwb0lkcyA9IFtdOwoKICAgICAgZm9yKGxldCBpPTA7IGk8IHRhYmxlRGF0YS5sZW5ndGg7IGkrKykgewogICAgICAgIGlmKHRhYmxlRGF0YVtpXS5jaGVja2VkKQogICAgICAgICAgcmVwb0lkcy5wdXNoKCh0YWJsZURhdGFbaV0uaWQgKyAiLCIgKyB0YWJsZURhdGFbaV0ub3JnYW5pemF0aW9uICsgIiwiICsgdGFibGVEYXRhW2ldLnJlcG9zaXRvcnkpLnRvU3RyaW5nKCkpOwogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKHJlcG9JZHMpOwogICAgICBheGlvcyh7CiAgICAgICAgaGVhZGVyczogc2V0SGVhZGVySldUKCksCiAgICAgICAgbWV0aG9kOiAicG9zdCIsCiAgICAgICAgdXJsOiB0aGlzLmN1c3RvbS5kZWZhdWx0VVJMICsgIi9SZXBvc2l0b3J5U2VsZWN0IiwKICAgICAgICBkYXRhIDogewogICAgICAgICAgcmVwb0lkczogcmVwb0lkcwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvUmVwb3NpdG9yeVNlbGVjdCIpCiAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHRoaXMuY3VzdG9tLm15VVJMKTsKICAgIH0KCiAgfQp9Cg=="},{"version":3,"sources":["RepositorySelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"RepositorySelect.vue","sourceRoot":"src/components/Dashboard/Views/Custom","sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5 class=\"card-title\">추적할 리포지토리 등록</h5>\n    </div>\n    <div class=\"card-body row table-full-width\">\n      <div class=\"col-sm-12\">\n        <el-table class=\"table-striped\"\n                  header-row-class-name=\"text-primary\"\n                  fit=\"true\"\n                  :data=\"tableData\">\n          <el-table-column type=\"index\">\n\n          </el-table-column>\n          <el-table-column prop=\"organization\"\n                           label=\"그룹명\">\n          </el-table-column>\n          <el-table-column prop=\"repository\"\n                           label=\"리포지토리명\">\n          </el-table-column>\n          <el-table-column prop=\"pushedAt\"\n                           align=\"center\"\n                           label=\"마지막사용\">\n          </el-table-column>\n          <el-table-column\n            align=\"right\"\n            label=\"Active\">\n            <template slot-scope=\"props\">\n              <p-switch v-model=\"props.row.checked\"></p-switch>\n            </template>\n          </el-table-column>\n        </el-table>\n        <p-button class=\"float-right\" style=\"margin: 1em;\" v-on:click=\"registerRepository()\">저장하기</p-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport {Table, TableColumn} from 'element-ui'\nimport PSwitch from 'src/components/UIComponents/Switch.vue'\nimport {Button} from \"@/components/UIComponents\";\nimport setHeaderJWT from \"@/api/setHeaderJWT\";\nimport axios from \"axios\";\nimport tab from \"@/components/UIComponents/Tabs/Tab\";\nVue.use(Table)\nVue.use(TableColumn)\nexport default {\n  components: {\n    PSwitch,\n    [Button.name]: Button\n  },\n  data () {\n    return {\n      name: \"RepositorySelect\",\n      tableData: [],\n    }\n  },\n  created() {\n    this.getList();\n  },\n  methods : {\n    async getList () {\n      console.log(\"setHeaderJWT()\", setHeaderJWT());\n      const RepositoryInfo = await axios({\n        headers: setHeaderJWT(),\n        method: \"get\",\n        url: this.custom.defaultURL + \"/RepositorySelect\",\n      });\n      this.tableData = RepositoryInfo.data;\n    },\n    async registerRepository() {\n      let tableData = this.tableData;\n      let repoIds = [];\n\n      for(let i=0; i< tableData.length; i++) {\n        if(tableData[i].checked)\n          repoIds.push((tableData[i].id + \",\" + tableData[i].organization + \",\" + tableData[i].repository).toString());\n      }\n      console.log(repoIds);\n      axios({\n        headers: setHeaderJWT(),\n        method: \"post\",\n        url: this.custom.defaultURL + \"/RepositorySelect\",\n        data : {\n          repoIds: repoIds\n        }\n      });\n      this.$router.push(\"/RepositorySelect\")\n      window.location.replace(this.custom.myURL);\n    }\n\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}