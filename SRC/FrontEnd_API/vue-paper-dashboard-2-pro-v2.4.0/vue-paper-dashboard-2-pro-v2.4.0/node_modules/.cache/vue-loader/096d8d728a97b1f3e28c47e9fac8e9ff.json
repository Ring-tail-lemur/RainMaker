{"remainingRequest":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/src/components/Dashboard/Views/Pages/TokenSetting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/src/components/Dashboard/Views/Pages/TokenSetting.vue","mtime":1664758139122},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/cache-loader/dist/cjs.js","mtime":1664435185541},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/babel-loader/lib/index.js","mtime":1664435185750},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/cache-loader/dist/cjs.js","mtime":1664435185541},{"path":"/Users/vidigummy/workspace/RainMaker/SRC/FrontEnd_API/vue-paper-dashboard-2-pro-v2.4.0/vue-paper-dashboard-2-pro-v2.4.0/node_modules/vue-loader/lib/index.js","mtime":1664435186048}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7QnV0dG9uLCBDYXJkLCBDaGVja2JveCwgSW5mb1NlY3Rpb259IGZyb20gIkAvY29tcG9uZW50cy9VSUNvbXBvbmVudHMiOwppbXBvcnQgQXBwTmF2YmFyIGZyb20gIkAvY29tcG9uZW50cy9EYXNoYm9hcmQvVmlld3MvUGFnZXMvTGF5b3V0L0FwcE5hdmJhciI7CmltcG9ydCBBcHBGb290ZXIgZnJvbSAiQC9jb21wb25lbnRzL0Rhc2hib2FyZC9WaWV3cy9QYWdlcy9MYXlvdXQvQXBwRm9vdGVyIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHNldEhlYWRlckpXVCBmcm9tICJAL2FwaS9zZXRIZWFkZXJKV1QiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUb2tlblNldHRpbmciLAogIGNvbXBvbmVudHM6IHsKICAgIENhcmQsCiAgICBBcHBOYXZiYXIsCiAgICBBcHBGb290ZXIsCiAgICBJbmZvU2VjdGlvbiwKICAgIFtDaGVja2JveC5uYW1lXTogQ2hlY2tib3gsCiAgICBbQnV0dG9uLm5hbWVdOiBCdXR0b24KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBnaXRodWJUb2tlbjogJycKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIHNhdmVUb2tlbigpIHsKICAgICAgYXdhaXQgYXhpb3MoewogICAgICAgIGhlYWRlcnM6IHNldEhlYWRlckpXVCgpLAogICAgICAgIG1ldGhvZDogInBvc3QiLAogICAgICAgIHVybDogdGhpcy5jdXN0b20uZGVmYXVsdFVSTCArICIvdG9rZW4iLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIHRva2VuOiB0aGlzLmdpdGh1YlRva2VuCiAgICAgICAgfQogICAgICB9KTsKICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UodGhpcy5jdXN0b20ubXlVUkwgKyAiL1JlcG9zaXRvcnlTZWxlY3QiKTsKICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLmNsb3NlTWVudSgpCiAgfQp9Cg=="},{"version":3,"sources":["TokenSetting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TokenSetting.vue","sourceRoot":"src/components/Dashboard/Views/Pages","sourcesContent":["<template>\n  <div class=\"register-page\">\n    <app-navbar></app-navbar>\n    <div class=\"wrapper wrapper-full-page \">\n      <div class=\"full-page register-page section-image\" filter-color=\"black\">\n        <div class=\"content\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-lg-4 col-md-6 mr-auto ml-auto\">\n                <card type=\"signup\" class=\"text-center h-full\">\n                  <template slot=\"header\">\n                    <h4 class=\"card-title mt-4\">Github Token</h4>\n                  </template>\n                  <div class=\"text-left \">\n                    1. <a href=\"https://github.com/settings/tokens/new\">GitHub Token 발급 페이지</a>에 들어가세요.<br>\n                    2. 아래의 스코프를 <b>꼭</b> 체크해주세요!<br>\n                    <div class=\"text-center m-3\">\n                      <span class=\"github-webhook-scope\">read:discussion</span>\n                      <span class=\"github-webhook-scope\">read:org</span>\n                      <span class=\"github-webhook-scope\">read:user</span>\n                      <span class=\"github-webhook-scope\">repo</span>\n                      <span class=\"github-webhook-scope\">user:email</span>\n                      <span class=\"github-webhook-scope\">read:repo_hook</span>\n                      <span class=\"github-webhook-scope\">write:repo_hook</span>\n                    </div>\n                  </div>\n                  <p slot=\"footer\" type=\"info\">\n                    <input v-model=\"githubToken\" class=\"w-11/12 mt-3\"\n                           style=\"width: 100%; margin-bottom: 20px; height: 40px\" type=\"text\"\n                           placeholder=\"github token을 입력해주세요!\"></input>\n                    <p-button round block class=\"mb-3\" v-on:click=\"saveToken()\">확인</p-button>\n                  </p>\n                </card>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"full-page-background\"\n             style=\"background-image: url(static/img/background/background-devops-2.jpg)\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {Button, Card, Checkbox, InfoSection} from \"@/components/UIComponents\";\nimport AppNavbar from \"@/components/Dashboard/Views/Pages/Layout/AppNavbar\";\nimport AppFooter from \"@/components/Dashboard/Views/Pages/Layout/AppFooter\";\nimport axios from \"axios\";\nimport setHeaderJWT from \"@/api/setHeaderJWT\";\n\nexport default {\n  name: \"TokenSetting\",\n  components: {\n    Card,\n    AppNavbar,\n    AppFooter,\n    InfoSection,\n    [Checkbox.name]: Checkbox,\n    [Button.name]: Button\n  },\n  data() {\n    return {\n      githubToken: ''\n    }\n  },\n  methods: {\n    async saveToken() {\n      await axios({\n        headers: setHeaderJWT(),\n        method: \"post\",\n        url: this.custom.defaultURL + \"/token\",\n        data: {\n          token: this.githubToken\n        }\n      });\n      window.location.replace(this.custom.myURL + \"/RepositorySelect\");\n    }\n  },\n  beforeDestroy() {\n    this.closeMenu()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}