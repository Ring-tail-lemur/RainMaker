{"remainingRequest":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\src\\components\\Dashboard\\Views\\Maps\\WorldMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\src\\components\\Dashboard\\Views\\Maps\\WorldMap.vue","mtime":1663216916584},{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663217045050},{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1663217045311},{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663217045050},{"path":"C:\\Users\\jonghyun\\Desktop\\소마프로젝트 총폴더\\vue-paper-dashboard-2-pro-v2.4.0\\vue-paper-dashboard-2-pro-v2.4.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1663217048947}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KCmltcG9ydCAnZDMnOwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7CmltcG9ydCAndG9wb2pzb24nOwppbXBvcnQgRGF0YU1hcCBmcm9tICdkYXRhbWFwcycKaW1wb3J0IHsgdGhyb3R0bGUgfSBmcm9tICJzcmMvdXRpbC90aHJvdHRsZSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbG9yMTogJyNBQUFBQUEnLAogICAgICBjb2xvcjI6ICcjNDQ0NDQ0JywKICAgICAgaGlnaGxpZ2h0RmlsbENvbG9yOiAnIzY2NjE1QicsCiAgICAgIGhpZ2hsaWdodEJvcmRlckNvbG9yOiAnI2YxZjFmMScsCiAgICAgIG1hcERhdGE6IHsKICAgICAgICAnQVVTJzogNzYwLAogICAgICAgICdCUkEnOiA1NTAsCiAgICAgICAgJ0NBTic6IDEyMCwKICAgICAgICAnREVVJzogMTMwMCwKICAgICAgICAnRlJBJzogNTQwLAogICAgICAgICdHQlInOiA2OTAsCiAgICAgICAgJ0dFTyc6IDIwMCwKICAgICAgICAnSU5EJzogMjAwLAogICAgICAgICdST1UnOiA2MDAsCiAgICAgICAgJ1JVUyc6IDMwMCwKICAgICAgICAnVVNBJzogMjkyMAogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZW5lcmF0ZUNvbG9ycyhsZW5ndGgpIHsKICAgICAgcmV0dXJuIGQzLnNjYWxlTGluZWFyKCkKICAgICAgICAuZG9tYWluKFswLCBsZW5ndGhdKQogICAgICAgIC5yYW5nZShbdGhpcy5jb2xvcjEsIHRoaXMuY29sb3IyXSk7CiAgICB9LAogICAgZ2VuZXJhdGVNYXBDb2xvcnMoKSB7CiAgICAgIGxldCBtYXBEYXRhVmFsdWVzID0gT2JqZWN0LnZhbHVlcyh0aGlzLm1hcERhdGEpOwogICAgICBsZXQgbWF4VmFsID0gTWF0aC5tYXgoLi4ubWFwRGF0YVZhbHVlcyk7CiAgICAgIGxldCBjb2xvcnMgPSB0aGlzLmdlbmVyYXRlQ29sb3JzKG1heFZhbCk7CiAgICAgIGxldCBtYXBEYXRhID0ge307CiAgICAgIGxldCBmaWxscyA9IHsKICAgICAgICBkZWZhdWx0RmlsbDogIiNlNGU0ZTQiLAogICAgICB9OwogICAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy5tYXBEYXRhKSB7CiAgICAgICAgbGV0IHZhbCA9IHRoaXMubWFwRGF0YVtrZXldOwogICAgICAgIGZpbGxzW2tleV0gPSBjb2xvcnModmFsKTsKICAgICAgICBtYXBEYXRhW2tleV0gPSB7CiAgICAgICAgICBmaWxsS2V5OiBrZXksCiAgICAgICAgICB2YWx1ZTogdmFsCiAgICAgICAgfTsKICAgICAgfQogICAgICByZXR1cm4gewogICAgICAgIG1hcERhdGEsCiAgICAgICAgZmlsbHMKICAgICAgfQogICAgfSwKICAgIGluaXRWZWN0b3JNYXAoKSB7CiAgICAgIGxldCB7IGZpbGxzLCBtYXBEYXRhIH0gPSB0aGlzLmdlbmVyYXRlTWFwQ29sb3JzKCk7CiAgICAgIGxldCB3b3JsZE1hcCA9IG5ldyBEYXRhTWFwKHsKICAgICAgICBzY29wZTogJ3dvcmxkJywKICAgICAgICBlbGVtZW50OiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgid29ybGRNYXAiKSwKICAgICAgICBmaWxscywKICAgICAgICBkYXRhOiBtYXBEYXRhLAogICAgICAgIHJlc3BvbnNpdmU6IHRydWUsCiAgICAgICAgZ2VvZ3JhcGh5Q29uZmlnOiB7CiAgICAgICAgICBib3JkZXJXaWR0aDogMC41LAogICAgICAgICAgYm9yZGVyT3BhY2l0eTogMC44LAogICAgICAgICAgaGlnaGxpZ2h0RmlsbENvbG9yOiB0aGlzLmhpZ2hsaWdodEZpbGxDb2xvciwKICAgICAgICAgIGhpZ2hsaWdodEJvcmRlckNvbG9yOiB0aGlzLmhpZ2hsaWdodEJvcmRlckNvbG9yLAogICAgICAgICAgaGlnaGxpZ2h0Qm9yZGVyV2lkdGg6IDAuNSwKICAgICAgICAgIGhpZ2hsaWdodEJvcmRlck9wYWNpdHk6IDAuOAogICAgICAgIH0sCiAgICAgIH0pOwogICAgICBsZXQgcmVzaXplRnVuYyA9IHdvcmxkTWFwLnJlc2l6ZS5iaW5kKHdvcmxkTWFwKTsKICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsICgpID0+IHsKICAgICAgICB0aHJvdHRsZShyZXNpemVGdW5jLCA0MCkKICAgICAgfSwgZmFsc2UpOwogICAgfQogIH0sCiAgYXN5bmMgbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdFZlY3Rvck1hcCgpCiAgfQp9Cg=="},{"version":3,"sources":["WorldMap.vue"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WorldMap.vue","sourceRoot":"src/components/Dashboard/Views/Maps","sourcesContent":["<template>\n  <div id=\"worldMap\" style=\"height: 300px;\"></div>\n</template>\n<script>\n  import 'd3';\n  import * as d3 from 'd3';\n  import 'topojson';\n  import DataMap from 'datamaps'\n  import { throttle } from \"src/util/throttle\";\n\n  export default {\n    data() {\n      return {\n        color1: '#AAAAAA',\n        color2: '#444444',\n        highlightFillColor: '#66615B',\n        highlightBorderColor: '#f1f1f1',\n        mapData: {\n          'AUS': 760,\n          'BRA': 550,\n          'CAN': 120,\n          'DEU': 1300,\n          'FRA': 540,\n          'GBR': 690,\n          'GEO': 200,\n          'IND': 200,\n          'ROU': 600,\n          'RUS': 300,\n          'USA': 2920\n        }\n      }\n    },\n    methods: {\n      generateColors(length) {\n        return d3.scaleLinear()\n          .domain([0, length])\n          .range([this.color1, this.color2]);\n      },\n      generateMapColors() {\n        let mapDataValues = Object.values(this.mapData);\n        let maxVal = Math.max(...mapDataValues);\n        let colors = this.generateColors(maxVal);\n        let mapData = {};\n        let fills = {\n          defaultFill: \"#e4e4e4\",\n        };\n        for (let key in this.mapData) {\n          let val = this.mapData[key];\n          fills[key] = colors(val);\n          mapData[key] = {\n            fillKey: key,\n            value: val\n          };\n        }\n        return {\n          mapData,\n          fills\n        }\n      },\n      initVectorMap() {\n        let { fills, mapData } = this.generateMapColors();\n        let worldMap = new DataMap({\n          scope: 'world',\n          element: document.getElementById(\"worldMap\"),\n          fills,\n          data: mapData,\n          responsive: true,\n          geographyConfig: {\n            borderWidth: 0.5,\n            borderOpacity: 0.8,\n            highlightFillColor: this.highlightFillColor,\n            highlightBorderColor: this.highlightBorderColor,\n            highlightBorderWidth: 0.5,\n            highlightBorderOpacity: 0.8\n          },\n        });\n        let resizeFunc = worldMap.resize.bind(worldMap);\n        window.addEventListener('resize', () => {\n          throttle(resizeFunc, 40)\n        }, false);\n      }\n    },\n    async mounted() {\n      this.initVectorMap()\n    }\n  }\n</script>\n<style>\n</style>\n"]}]}