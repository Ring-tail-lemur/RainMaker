{"version":3,"file":null,"sources":["../node_modules/babel-helper-vue-jsx-merge-props/index.js","../src/index.js","../src/Notification.js","../src/Notifications.js"],"sourcesContent":["var nestRE = /^(attrs|props|on|nativeOn|class|style|hook)$/\n\nmodule.exports = function mergeJSXProps (objs) {\n  return objs.reduce(function (a, b) {\n    var aa, bb, key, nestedKey, temp\n    for (key in b) {\n      aa = a[key]\n      bb = b[key]\n      if (aa && nestRE.test(key)) {\n        // normalize class\n        if (key === 'class') {\n          if (typeof aa === 'string') {\n            temp = aa\n            a[key] = aa = {}\n            aa[temp] = true\n          }\n          if (typeof bb === 'string') {\n            temp = bb\n            b[key] = bb = {}\n            bb[temp] = true\n          }\n        }\n        if (key === 'on' || key === 'nativeOn' || key === 'hook') {\n          // merge functions\n          for (nestedKey in bb) {\n            aa[nestedKey] = mergeFn(aa[nestedKey], bb[nestedKey])\n          }\n        } else if (Array.isArray(aa)) {\n          a[key] = aa.concat(bb)\n        } else if (Array.isArray(bb)) {\n          a[key] = [aa].concat(bb)\n        } else {\n          for (nestedKey in bb) {\n            aa[nestedKey] = bb[nestedKey]\n          }\n        }\n      } else {\n        a[key] = b[key]\n      }\n    }\n    return a\n  }, {})\n}\n\nfunction mergeFn (a, b) {\n  return function () {\n    a.apply(this, arguments)\n    b.apply(this, arguments)\n  }\n}\n","import Notifications from './Notifications.js'\nimport Vue from 'vue';\n\nconst NotificationStore = {\n    state: [], // here the notifications will be added\n    settings: {\n        overlap: false,\n        verticalAlign: 'top',\n        horizontalAlign: 'right',\n        type: 'info',\n        timeout: 5000,\n        closeOnClick: true,\n        showClose: true\n    },\n    setOptions(options) {\n        this.settings = {...this.settings, ...options}\n    },\n    removeNotification(timestamp) {\n        const indexToDelete = this.state.findIndex(n => n.timestamp === timestamp)\n        if (indexToDelete !== -1) {\n            this.state.splice(indexToDelete, 1)\n        }\n    },\n    addNotification(notification) {\n        if (typeof notification === 'string' || notification instanceof String) {\n            notification = {message: notification}\n        }\n        notification.timestamp = new Date()\n        notification.timestamp.setMilliseconds(notification.timestamp.getMilliseconds() + this.state.length)\n        notification = {...this.settings, ...notification}\n        this.state.push(notification)\n    },\n    notify(notification) {\n        if (Array.isArray(notification)) {\n            notification.forEach((notificationInstance) => {\n                this.addNotification(notificationInstance)\n            })\n        } else {\n            this.addNotification(notification)\n        }\n\n    },\n    clear() {\n      this.state = []\n    }\n};\n\nfunction initStore(Vue){\n  return new Vue({\n    data(){\n      return {\n        notificationStore: NotificationStore\n      }\n    },\n    methods: {\n      notify(notification) {\n        this.notificationStore.notify(notification);\n      }\n    }\n  });\n}\n\nexport const Notification = new class {\n  constructor(){\n    this.store = initStore(Vue);\n  }\n\n  notify(...params){\n    this.store.notify(params)\n  }\n\n  notifications(){\n    return this.store.notificationStore;\n  }\n};\n\nexport default {\n  install (Vue, options) {\n    let store = initStore(Vue);\n    Vue.prototype.$notify = store.notify;\n    Vue.prototype.$notifications = store.notificationStore;\n    Vue.component('Notifications', Notifications);\n    if(options){\n      NotificationStore.setOptions(options)\n    }\n  }\n}\n","export default {\n    name: 'notification',\n    props: {\n        message: String,\n        title: String,\n        icon: String,\n        verticalAlign: {\n            type: String,\n            default: 'top',\n            validator: (value) => {\n                let acceptedValues = ['top', 'bottom']\n                return acceptedValues.indexOf(value) !== -1\n            }\n        },\n        horizontalAlign: {\n            type: String,\n            default: 'right',\n            validator: (value) => {\n                let acceptedValues = ['left', 'center', 'right']\n                return acceptedValues.indexOf(value) !== -1\n            }\n        },\n        type: {\n            type: String,\n            default: 'info',\n            validator: (value) => {\n                let acceptedValues = ['info', 'primary', 'danger', 'warning', 'success']\n                return acceptedValues.indexOf(value) !== -1\n            }\n        },\n        timeout: {\n            type: Number,\n            default: 5000,\n            validator: (value) => {\n                return value >= 0\n            }\n        },\n        timestamp: {\n            type: Date,\n            default: () => new Date()\n        },\n        component: {\n            type: [Object, Function]\n        },\n        showClose: {\n            type: Boolean,\n            default: true\n        },\n        closeOnClick: {\n            type: Boolean,\n            default: true\n        },\n        clickHandler: Function,\n    },\n    data () {\n        return {\n            elmHeight: 0\n        }\n    },\n    computed: {\n        hasIcon () {\n            return this.icon && this.icon.length > 0\n        },\n        alertType () {\n            return `alert-${this.type}`\n        },\n        customPosition () {\n            let initialMargin = 20\n            let alertHeight = this.elmHeight + 10;\n            let sameAlertsCount = this.$notifications.state.filter((alert) => {\n                return alert.horizontalAlign === this.horizontalAlign && alert.verticalAlign === this.verticalAlign && alert.timestamp <= this.timestamp\n            }).length\n            if (this.$notifications.settings.overlap) {\n                sameAlertsCount = 1\n            }\n            let pixels = (sameAlertsCount - 1) * alertHeight + initialMargin\n            let styles = {}\n            if (this.verticalAlign === 'top') {\n                styles.top = `${pixels}px`\n            } else {\n                styles.bottom = `${pixels}px`\n            }\n            return styles\n        }\n    },\n    methods: {\n        close () {\n            this.$emit('close', this.timestamp)\n        },\n        tryClose (evt) {\n            if(this.clickHandler){\n                this.clickHandler(evt, this)\n            }\n            if (this.closeOnClick) {\n                this.close()\n            }\n        }\n    },\n    mounted () {\n        this.elmHeight = this.$el.clientHeight\n        if (this.timeout) {\n            setTimeout(this.close, this.timeout)\n        }\n    },\n    render (h) {\n        let componentName = this.component\n        return (\n            <div onClick={this.tryClose}\n                data-notify=\"container\"\n                class={['alert open ', {'alert-with-icon': this.icon}, this.verticalAlign, this.horizontalAlign, this.alertType]}\n                role=\"alert\"\n                style={this.customPosition}\n                data-notify-position=\"top-center\">\n                {\n                    this.showClose && <button\n                        type=\"button\"\n                        aria-hidden=\"true\"\n                        class=\"close col-xs-1\"\n                        data-notify=\"dismiss\"\n                        onClick={this.close}>Ã—\n                                    </button>\n                }\n                {\n                    this.icon && <span data-notify=\"icon\" class={['alert-icon', this.icon]}></span>\n                }\n                <span data-notify=\"message\">\n                    {this.title !== undefined && <span class=\"title\"><b>{this.title}<br/></b></span>}\n                    {this.message !== undefined && this.message}\n                    {this.component !== undefined &&\n                        <this.component></this.component>}\n                </span>\n            </div>\n        )\n    }\n}\n","import Notification from './Notification.js'\nexport default {\n    props: {\n        transitionName: {\n            type: String,\n            default: 'list'\n        },\n        transitionMode: {\n            type: String,\n            default: 'in-out'\n        },\n        overlap: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data () {\n        return {\n            notifications: this.$notifications.state\n        }\n    },\n    methods: {\n        removeNotification (timestamp) {\n            this.$notifications.removeNotification(timestamp)\n        }\n    },\n    created(){\n        this.$notifications.settings.overlap = this.overlap\n    },\n    render(){\n        const renderedNotifications = this.$notifications.state.map((notification, index) => {\n                return <Notification\n                    horizontalAlign={notification.horizontalAlign}\n                    verticalAlign={notification.verticalAlign}\n                    icon={notification.icon}\n                    message={notification.message}\n                    title={notification.title}\n                    timeout={notification.timeout}\n                    type={notification.type}\n                    component={notification.component}\n                    timestamp={notification.timestamp}\n                    closeOnClick={notification.closeOnClick}\n                    clickHandler={notification.onClick}\n                    showClose={notification.showClose}\n                    key={notification.timestamp.getTime()} onClose={this.removeNotification}/>\n            }\n        )\n        return (\n            <div class=\"notifications vue-notifyjs\">\n                <transition-group name={this.transitionName} mode={this.transitionMode}>\n                    {renderedNotifications}\n                </transition-group>\n            </div>\n        )\n    },\n    watch: {\n        overlap: function (newVal) {\n            this.$notifications.settings.overlap = newVal\n        }\n    }\n}\n"],"names":["mergeFn","a","b","apply","this","arguments","initStore","Vue","NotificationStore","notification","notificationStore","notify","nestRE","objs","reduce","aa","bb","key","nestedKey","temp","test","Array","isArray","concat","String","value","indexOf","Number","Date","Object","Function","Boolean","icon","length","type","alertHeight","elmHeight","sameAlertsCount","$notifications","state","filter","alert","horizontalAlign","_this","verticalAlign","timestamp","settings","overlap","pixels","styles","top","bottom","$emit","evt","clickHandler","closeOnClick","close","$el","clientHeight","timeout","h","component","alert-with-icon","alertType","style","customPosition","tryClose","showClose","data-notify","undefined","title","class","message","removeNotification","renderedNotifications","map","index","onClick","getTime","name","transitionName","mode","transitionMode","newVal","options","indexToDelete","findIndex","n","splice","setMilliseconds","getMilliseconds","push","forEach","notificationInstance","addNotification","Notification","store","params","prototype","$notify","Notifications","setOptions"],"mappings":"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"}