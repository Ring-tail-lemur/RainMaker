{
  "commits": {
    "request": {
      "method": "GET",
      "url": "https://api.github.com/repos/{{owner}}/{{repo}}/commits",
      "header": {
        "accept": "application/vnd.github+json"
      },
      "path_parameters": {
      },
      "query_parameters": {
        "per_page": "100"
      }
    },
    "mapping": {
      "sha": [
        "commit_id",
        "string"
      ],
      "author.id": [
        "author_id",
        "int"
      ],
      "commit.message": [
        "message",
        "string"
      ],
      "commit.author.date": [
        "commit_time",
        "datetime2"
      ]
    }
  },
  "pull_request": {
    "request": {
      "method": "GET",
      "url": "https://api.github.com/repos/{{owner}}/{{repo}}/pulls",
      "header": {
        "accept": "application/vnd.github+json"
      },
      "path_parameters": {},
      "query_parameters": {
        "state": "all",
        "per_page": "100"
      }
    },
    "mapping": {
      "id": [
        "pull_request_id",
        "int"
      ],
      "number": [
        "pull_request_number",
        "int"
      ],
      "head.ref": [
        "pull_request_open_branch_name",
        "string"
      ],
      "base.ref": [
        "pull_request_close_branch_name",
        "string"
      ],
      "base.repo.id": [
        "repository_id",
        "int"
      ]
    }
  },
  "[comment]pull_request_comment": {
    "graphql": "pull_request_comment.graphql",
    "mapping": {
      "data.repository.pullRequests.nodes.comments.nodes.databaseId": [
        "pull_request_comment_id",
        "int"
      ],
      "data.repository.pullRequests.nodes.comments.nodes.publishedAt": [
        "event_time",
        "datetime2"
      ],
      "data.repository.pullRequests.nodes.databaseId": [
        "pull_request_id",
        "int"
      ],
      "data.repository.pullRequests.nodes.comments.nodes.author.databaseId": [
        "git_user_id",
        "int"
      ],
      "[default]COMMENT": [
        "comment_type",
        "string"
      ]
    }
  },
  "[review]pull_request_comment": {
    "graphql": "pull_request_comment_review.graphql",
    "mapping": {
      "data.repository.pullRequests.nodes.reviews.nodes.databaseId": [
        "pull_request_comment_id",
        "int"
      ],
      "data.repository.pullRequests.nodes.reviews.nodes.createdAt": [
        "event_time",
        "datetime2"
      ],
      "data.repository.pullRequests.nodes.databaseId": [
        "pull_request_id",
        "int"
      ],
      "data.repository.pullRequests.nodes.reviews.nodes.author.databaseId": [
        "git_user_id",
        "int"
      ],
      "[default]REVIEW": [
        "comment_type",
        "string"
      ]
    }
  },
  "release": {
    "graphql": "release.graphql",
    "mapping": {
      "repository.releases.nodes.databaseId": [
        "release_id",
        "int"
      ],
      "repository.releases.nodes.isPrerelease": [
        "pre_release",
        "bit"
      ],
      "repository.releases.nodes.name": [
        "name",
        "string"
      ],
      "repository.releases.nodes.author.databaseId": [
        "author_id",
        "int"
      ],
      "repository.releases.nodes.tagName": [
        "tag_name",
        "string"
      ],
      "repository.databaseId": [
        "repository_id",
        "int"
      ],
      "repository.releases.nodes.publishedAt": [
        "published_at",
        "datetime2"
      ],
      "repository.releases.nodes.isDraft": [
        "draft",
        "bit"
      ]
    }
  },
  "git_user": {
    "request": {
      "method": "GET",
      "url": "https://api.github.com/repos/{{owner}}/{{repo}}/contributors",
      "header": {
        "accept": "application/vnd.github+json"
      },
      "path_parameters": {},
      "query_parameters": {
        "per_page": "100"
      }
    },
    "mapping": {
      "id": [
        "git_user_id",
        "int"
      ],
      "login": [
        "name",
        "string"
      ]
    }
  },
  "branch": {
    "graphql": "branch.graphql",
    "mapping": {
      "data.repository.refs.nodes.name": [
        "name",
        "string"
      ],
      "data.repository.refs.nodes.target.author.user.databaseId": [
        "git_user_id",
        "bigint"
      ],
      "data.repository.databaseId": [
        "repository_id",
        "bigint"
      ]
    }
  },
  "[open]pull_request_event": {
    "graphql": "pull_request_event_open.graphql",
    "mapping": {
      "[default]OPENED": [
        "pull_request_event_type",
        "string"
      ],
      "data.repository.pullRequests.nodes.createdAt": [
        "event_time",
        "datetime2"
      ],
      "data.repository.pullRequests.nodes.databaseId": [
        "pull_request_id",
        "bigint"
      ],
      "data.repository.pullRequests.nodes.author.databaseId": [
        "event_sender_id",
        "bigint"
      ]
    }
  },
  "[close]pull_request_event": {
    "graphql": "pull_request_event_closed.graphql",
    "mapping": {
      "[default]CLOSED": [
        "pull_request_event_type",
        "string"
      ],
      "data.repository.pullRequests.nodes.closedAt": [
        "event_time",
        "datetime2"
      ],
      "data.repository.pullRequests.nodes.databaseId": [
        "pull_request_id",
        "bigint"
      ],
      "data.repository.pullRequests.nodes.author.databaseId": [
        "event_sender_id",
        "bigint"
      ]
    }
  }
}
