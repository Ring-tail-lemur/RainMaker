name: '[DEPLOY] Alert Server'

on:
  push:
    branches:
      - main
    paths:
      - "SRC/alert/**"
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './SRC/alert' # set this to the path to your web app project, defaults to the repository root
  PYTHON_VERSION: '3.8' # set this to the python version to use (supports 3.6, 3.7, 3.8)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: 'Insert ms-sql.json'
        shell: bash
        run: |
          pushd './${{env.AZURE_FUNCTIONAPP_PACKAGE_PATH}}'
          echo '${{secrets.ALERT_SERVER_MS_SQL}}' >> ./alert-server/ms-sql.json
          popd

      - name: Setup Python version
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        run: |
          pushd './${{env.AZURE_FUNCTIONAPP_PACKAGE_PATH}}'
          ls
          python -m venv venv
          source venv/bin/activate
          popd

      - name: Install dependencies
        run : |
          pushd './${{env.AZURE_FUNCTIONAPP_PACKAGE_PATH}}'
          pip install -r requirements.txt
          popd
        
      # Optional: Add step to run tests here

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            ${{env.AZURE_FUNCTIONAPP_PACKAGE_PATH}}/venv

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-function.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: ${{env.AZURE_FUNCTIONAPP_PACKAGE_PATH}}

      - name: 'DEBUG'
        run: |
          pwd
          ls
          pushd './${{env.AZURE_FUNCTIONAPP_PACKAGE_PATH}}'
          pwd
          ls

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'rainmaker-alert-server'
          slot-name: 'Production'
          package: ${{env.AZURE_FUNCTIONAPP_PACKAGE_PATH}}
          publish-profile: ${{ secrets.ALERT_SERVER_PUBLISH_PROFILE }}
          scm-do-build-during-deployment: true
          enable-oryx-build: true
