name:  ETL Deployment Pipeline [Practice]

on:
  push:
    branches:
      - MUAM-366/EtlDeploymentPrivateToPublic
    paths:
      - "SRC/ETLs/analyst/**"

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the following secrets in your repository:
#   AZURE_FUNCTIONAPP_PUBLISH_PROFILE
#
# 2. Change these variables for your configuration:
env:
  AZURE_FUNCTIONAPP_NAME: github-analystics     # set this to your function app name on Azure
  POM_XML_DIRECTORY: 'SRC/ETLs/analyst'
  POM_FUNCTIONAPP_NAME: analyst-1659606593521
  JAVA_VERSION: '1.8.x'                      # set this to the java version to use

jobs:
  build-and-deploy:
    runs-on: windows-latest
    environment: dev
    steps:
      - uses: actions/checkout@master
      - name: Setup Java Sdk ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: 'Restore Project Dependencies Using Mvn'
        env:
          SUPER_PERSISTENCE: ${{secrets.DATABASE_PERSISTENCE_XML}}
        shell: pwsh
        run: |
          rm ./${{env.POM_XML_DIRECTORY}}/src/main/resources/META-INF/persistence.xml -r -fo
          ls ./${{env.POM_XML_DIRECTORY}}/src/main/resources/META-INF
          echo '<?xml version="1.0" encoding="UTF-8"?><persistence version="2.2" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd"><persistence-unit name="azure-mssql-unit"><properties> <property name="javax.persistence.jdbc.driver" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/><property name="javax.persistence.jdbc.user" value="rainmaker"/><property name="javax.persistence.jdbc.password" value="dkffkrRhfldudndnjstnddl!"/><property name="javax.persistence.jdbc.url" value="jdbc:sqlserver://rainmaker-azure-sql-server.database.windows.net:1433;database=RainMakerSystemDB"/><property name="hibernate.dialect" value="org.hibernate.dialect.SQLServer2012Dialect"/><property name="hibernate.physical_naming_strategy" value="com.ringtaillemur.analyst.config.LowerCaseSnakePhysicalNamingStrategy"/><property name="hibernate.show_sql" value="true"/><property name="hibernate.format_sql" value="true"/><property name="hibernate.use_sql_comments" value="true"/></properties></persistence-unit></persistence>' >> ./${{env.POM_XML_DIRECTORY}}/src/main/resources/META-INF/persistence.xml
          echo '${{env.SUPER_PERSISTENCE}}' >> ./${{env.POM_XML_DIRECTORY}}/persistence.xml
          chmod 777 ./${{env.POM_XML_DIRECTORY}}/src/main/resources/META-INF/persistence.xml
          echo hi
          ls ./${{env.POM_XML_DIRECTORY}}/src/main/resources/META-INF
          pushd './${{ env.POM_XML_DIRECTORY }}'
          mvn clean package
          popd
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: './${{ env.POM_XML_DIRECTORY }}/target/azure-functions/${{ env.POM_FUNCTIONAPP_NAME }}'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE_ETL }}
          # package: './${{ env.POM_XML_DIRECTORY }}/target/azure-functions/analyst-1659606593521/${{ env.POM_FUNCTIONAPP_NAME }}'
          # package: './${{ env.POM_XML_DIRECTORY }}/target/azure-functions/${{ env.POM_FUNCTIONAPP_NAME }}'
  # For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
